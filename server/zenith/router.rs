use crate::App;

pub fn router() -> axum::Router<App> {
    axum::Router::new()
       .route("/auth/login", axum::routing::post(crate::api::auth::login))
       .route("/auth/logout", axum::routing::post(crate::api::auth::logout))
       .route("/collections", axum::routing::get(crate::api::collections::get_collections))
       .route("/collections/:id", axum::routing::get(crate::api::collections::get_collection))
       .route("/collections", axum::routing::post(crate::api::collections::create_collection))
       .route("/collections/:id", axum::routing::delete(crate::api::collections::delete_collection))
       .route("/collections/:id", axum::routing::put(crate::api::collections::update_collection))
       .route("/items/:id/images/:type", axum::routing::get(crate::api::images::get_image))
       .route("/import/subtitle", axum::routing::post(crate::api::import::import_subtitle))
       .route("/items", axum::routing::get(crate::api::items::get_items))
       .route("/items/continue_watching", axum::routing::get(crate::api::items::get_continue_watching))
       .route("/items/:id", axum::routing::get(crate::api::items::get_item))
       .route("/items/:id", axum::routing::delete(crate::api::items::delete_item))
       .route("/items/:id/user_data", axum::routing::patch(crate::api::items::update_user_data))
       .route("/metadata/match_all", axum::routing::post(crate::api::metadata::match_all))
       .route("/metadata/refresh_outdated", axum::routing::post(crate::api::metadata::refresh_outdated))
       .route("/metadata/:id/find_match", axum::routing::post(crate::api::metadata::find_match))
       .route("/metadata/:id/set_match", axum::routing::post(crate::api::metadata::set_match))
       .route("/metadata/:id/refresh", axum::routing::post(crate::api::metadata::refresh_metadata))
       .route("/movies", axum::routing::get(crate::api::movies::get_movies))
       .route("/movies/:id", axum::routing::get(crate::api::movies::get_movie))
       .route("/movies/recent", axum::routing::get(crate::api::movies::get_recent_movies))
       .route("/progress/:id", axum::routing::post(crate::api::progress::update_progress))
       .route("/scanner/start", axum::routing::post(crate::api::scanner::start_scan))
       .route("/server/db/backup", axum::routing::post(crate::api::server::backup_db))
       .route("/subtitles/:id", axum::routing::get(crate::api::subtitles::get_subtitle))
       .route("/subtitles/:id", axum::routing::delete(crate::api::subtitles::delete_subtitle))
       .route("/transcoder", axum::routing::get(crate::api::transcoder::get_state))
       .route("/transcoder/events", axum::routing::get(crate::api::transcoder::get_events))
       .route("/transcoder", axum::routing::post(crate::api::transcoder::transcode))
       .route("/shows", axum::routing::get(crate::api::tv::get_shows))
       .route("/shows/recent", axum::routing::get(crate::api::tv::get_recent_shows))
       .route("/shows/:id/seasons", axum::routing::get(crate::api::tv::get_seasons))
       .route("/shows/:id/episodes", axum::routing::get(crate::api::tv::get_show_episodes))
       .route("/seasons/:id/episodes", axum::routing::get(crate::api::tv::get_episodes))
       .route("/users", axum::routing::get(crate::api::users::get_all))
       .route("/users/me", axum::routing::get(crate::api::users::get_authenticated_user))
       .route("/users", axum::routing::post(crate::api::users::create))
       .route("/users/registrations", axum::routing::post(crate::api::users::create_registration))
       .route("/videos/:id", axum::routing::get(crate::api::videos::get_video_content))
}

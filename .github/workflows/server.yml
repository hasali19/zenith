name: Server

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/server.yml
      - server/**
      - web/**
      - Cargo.lock
      - Cargo.toml
      - Dockerfile
    branches:
      - "**"
    tags-ignore:
      - "*/latest"

permissions:
  checks: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - uses: auguwu/clippy-action@1.3.0
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          all-features: true
          check-args: "--workspace"
          deny: warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - uses: Swatinem/rust-cache@v2
        with:
          key: test

      - name: Install cargo-binstall
        run: |
          wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz
          tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz cargo-binstall
          mv cargo-binstall ~/.cargo/bin

      - name: Install cargo-nextest
        run: cargo binstall cargo-nextest --secure --no-confirm --force

      - name: Run tests
        run: cargo nextest run --features mocks

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install cargo-binstall
        run: |
          wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz
          tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz cargo-binstall
          mv cargo-binstall ~/.cargo/bin

      - name: Install cargo-nextest
        run: cargo binstall cargo-nextest --secure --no-confirm --force

      - name: Install cargo-llvm-cov
        run: cargo binstall cargo-llvm-cov --secure --no-confirm --force

      - name: Generate code coverage
        run: cargo llvm-cov nextest --features mocks --lcov --output-path lcov.info

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Download cross
        run: |
          wget https://github.com/rust-embedded/cross/releases/download/v0.2.1/cross-v0.2.1-x86_64-unknown-linux-musl.tar.gz
          sudo tar -xvf cross-v0.2.1-x86_64-unknown-linux-musl.tar.gz -C /usr/local/bin

      - name: Build application
        run: |
          cross build --release --bin zenith --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zenith-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/zenith

  deploy:
    name: Deploy docker image
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs:
      - lint
      - test
      - build
    concurrency:
      group: server-deploy
      cancel-in-progress: true
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - run: |
          mkdir -p artifacts/linux/amd64 artifacts/linux/arm64
          mv -T artifacts/zenith-x86_64-unknown-linux-musl artifacts/linux/amd64
          mv -T artifacts/zenith-aarch64-unknown-linux-musl artifacts/linux/arm64

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./deploy/Dockerfile.server
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/hasali19/zenith:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

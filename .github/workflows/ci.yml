name: CI

on:
  push:

jobs:
  build_server:
    name: Build server
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install lld
        run: sudo apt-get install lld

      - name: Cache cargo output
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-${{ matrix.target }}-server-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-server-
            ${{ runner.os }}-server-

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Build application
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin zenith --target ${{ matrix.target }}
          use-cross: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: zenith-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/zenith

  build_web_client:
    name: Build web client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client/web
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: yarn install

      - name: Build application
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: client/web/dist

  deploy:
    name: Deploy docker image
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs:
      - build_server
      - build_web_client
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Download server artifact
        uses: actions/download-artifact@v2
        with:
          name: zenith-x86_64-unknown-linux-gnu
          path: target/release

      - name: Download web client artifact
        uses: actions/download-artifact@v2
        with:
          name: web
          path: client/web/dist

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/hasali19/zenith:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

name: Flutter

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/flutter.yml
      - flutter/**
    branches:
      - "**"
    tags-ignore:
      - "*/latest"

jobs:
  check_generated_code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: beta

      - run: dart run build_runner build --delete-conflicting-outputs
        working-directory: flutter

      - uses: infotroph/tree-is-clean@v1
        with:
          check_untracked: true

  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: beta

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - run: |
          echo $ANDROID_KEYSTORE | base64 -d > keystore.jks
          export GIT_COMMIT_HASH=$(git rev-parse HEAD)
          flutter build apk --build-number=$GITHUB_RUN_NUMBER --dart-define=GIT_COMMIT_HASH=$GIT_COMMIT_HASH --split-per-abi
        working-directory: flutter
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEYSTORE_PATH: ../../keystore.jks

      - uses: actions/upload-artifact@v4
        with:
          name: zenith-flutter-android
          path: flutter/build/app/outputs/flutter-apk/app-*-release.apk

  build_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: beta

      - run: |
          export GIT_COMMIT_HASH=$(git rev-parse HEAD)
          flutter build web --wasm --build-number=$GITHUB_RUN_NUMBER --dart-define=GIT_COMMIT_HASH=$GIT_COMMIT_HASH --dart-define=DEFAULT_SERVER=
        working-directory: flutter

      - uses: actions/upload-artifact@v4
        with:
          name: zenith-flutter-web
          path: flutter/build/web

  deploy_web_docker:
    runs-on: ubuntu-latest
    if: success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master'
    needs:
      - check_generated_code
      - build_web
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: zenith-flutter-web
          path: zenith-flutter-web

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.web
          platforms: linux/amd64,linux/arm64
          build-args: BUILD_PATH=zenith-flutter-web
          push: true
          tags: |
            ghcr.io/hasali19/zenith-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install flutter
        run: |
          $flutter_version="3.24.0-0.2.pre-beta"
          $download_url="https://storage.googleapis.com/flutter_infra_release/releases/beta/windows/flutter_windows_$flutter_version.zip"
          $install_path="$env:RUNNER_TOOL_CACHE\flutter-$flutter_version"
          echo "Downloading SDK from $download_url ..."
          Invoke-WebRequest $download_url -OutFile .
          echo "Unpacking into $install_path"
          Expand-Archive -Path flutter_windows_$flutter_version.zip -Destination $install_path
          echo "Successfully unpacked SDK"
          "$install_path\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
          & $install_path\flutter\bin\flutter --version --suppress-analytics
          & $install_path\flutter\bin\flutter config --no-analytics
          & $install_path\flutter\bin\flutter config --no-cli-animations

      - name: Install wget
        run: |
          choco install wget

      - name: Install corrosion
        run: |
          wget https://github.com/hasali19/corrosion-build/releases/download/autobuild-2022-12-29-17-03/corrosion-win.tar.gz
          tar -xvf corrosion-win.tar.gz
          mv corrosion-win 'C:\Program Files (x86)\Corrosion'

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Download mpv
        run: |
          wget https://sourceforge.net/projects/mpv-player-windows/files/libmpv/mpv-dev-x86_64-v3-20231231-git-abc2a74.7z/download
          7z x download -ompv
          cd mpv

      - name: Download angle
        run: |
          wget https://github.com/hasali19/angle-build/releases/download/build-2023-04-01-23-12/angle-win64.tar.gz
          tar -xvf angle-win64.tar.gz

      - name: Fetch dart packages
        run: |
          cd flutter
          flutter pub get

      - name: Build windows app
        run: |
          $env:MPV_DIR="$(pwd)\mpv"
          $env:ANGLE_BIN_DIR="$(pwd)\angle-win64\bin"
          cd flutter
          $env:GIT_COMMIT_HASH=(git rev-parse HEAD)
          flutter build windows -v --build-number=$env:GITHUB_RUN_NUMBER --dart-define=GIT_COMMIT_HASH=$env:GIT_COMMIT_HASH

      - uses: actions/upload-artifact@v4
        with:
          name: zenith-flutter-windows
          path: flutter/build/windows/x64/runner/Release

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Build msix package
        run: |
          $env:MPV_DIR="$(pwd)\mpv"
          $env:ANGLE_BIN_DIR="$(pwd)\angle-win64\bin"
          cd flutter
          $version = (cat .\pubspec.yaml | select-string -pattern '^version: (.+)').Matches[0].Groups[1].Value.Split('+')[0].Trim()
          $version = "$version.$env:GITHUB_RUN_NUMBER"
          echo "Building MSIX package version $version"
          dart run msix:create --version $version --publisher 'CN=hasali19, C=UK' --sign-msix false --build-windows false
          [System.IO.File]::WriteAllBytes("$(pwd)\cert.pfx", [Convert]::FromBase64String("${{ secrets.CODE_SIGNING_CERT_PFX }}"))
          signtool sign /fd SHA256 /a /f "$(pwd)\cert.pfx" /p '${{ secrets.CODE_SIGNING_CERT_PASSWORD }}' .\build\windows\x64\runner\Release\zenith.msix
          echo "Generating appinstaller"
          (cat windows\zenith.appinstaller) -replace '%VERSION%', $version > zenith.appinstaller

      - uses: actions/upload-artifact@v4
        with:
          name: zenith-flutter-windows-msix
          path: flutter/build/windows/x64/runner/Release/zenith.msix

      - uses: actions/upload-artifact@v4
        with:
          name: zenith-flutter-windows-appinstaller
          path: flutter/zenith.appinstaller

  release:
    runs-on: ubuntu-latest
    if: success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master'
    needs:
      - check_generated_code
      - build_android
      - build_web
      - build_windows
    concurrency:
      group: flutter-release
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - run: |
          ls -R artifacts
          mkdir release_artifacts

          echo "Preparing windows zip"
          cd artifacts/zenith-flutter-windows
          zip -r ../../release_artifacts/zenith-windows.zip *
          cd ../..

          echo "Preparing windows msix package"
          cp artifacts/zenith-flutter-windows-msix/zenith.msix release_artifacts/zenith-windows.msix
          cp artifacts/zenith-flutter-windows-appinstaller/zenith.appinstaller release_artifacts/zenith-windows.appinstaller

          echo "Preparing android apks"
          cp artifacts/zenith-flutter-android/app-arm64-v8a-release.apk release_artifacts/zenith-arm64-v8a-release.apk
          cp artifacts/zenith-flutter-android/app-armeabi-v7a-release.apk release_artifacts/zenith-armeabi-v7a-release.apk
          cp artifacts/zenith-flutter-android/app-x86_64-release.apk release_artifacts/zenith-x86_64-release.apk
          jq "(.info | .versionCode) |= 4000 + $GITHUB_RUN_NUMBER" flutter/zenith.apk.json > release_artifacts/zenith.apk.json

          echo "Preparing web zip"
          cd artifacts/zenith-flutter-web
          zip -r ../../release_artifacts/zenith-web.zip *
          cd ../..

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.CR_PAT }}"
          automatic_release_tag: "flutter/latest"
          prerelease: false
          title: "Flutter Client - Latest Build"
          files: release_artifacts/*

name: Flutter

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/flutter.yml
      - flutter/**

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: |
          echo $ANDROID_KEYSTORE | base64 -d > keystore.jks
          export GIT_COMMIT_HASH=$(git rev-parse HEAD)
          flutter build apk --dart-define=GIT_COMMIT_HASH=$GIT_COMMIT_HASH
        working-directory: flutter
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEYSTORE_PATH: ../../keystore.jks

      - uses: actions/upload-artifact@v3
        with:
          name: zenith-flutter-android
          path: flutter/build/app/outputs/flutter-apk/app-release.apk

  build_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter build web --web-renderer canvaskit --dart-define=DEFAULT_SERVER=
        working-directory: flutter

      - uses: actions/upload-artifact@v3
        with:
          name: zenith-flutter-web
          path: flutter/build/web

  deploy_web:
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs:
      - build_web
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: zenith-flutter-web

      - run: echo "/* /index.html" > _redirects

      - uses: netlify/actions/cli@master
        with:
          args: deploy --dir=. --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install wget
        run: |
          choco install wget

      - name: Install corrosion
        run: |
          git clone https://github.com/corrosion-rs/corrosion.git
          cmake -Scorrosion -Bbuild -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          cmake --install build --config Release

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Download mpv
        run: |
          wget https://sourceforge.net/projects/mpv-player-windows/files/libmpv/mpv-dev-x86_64-v3-20221113-git-2f74734.7z/download
          7z x download -ompv
          cd mpv
          $exports = get-content mpv.def
          echo "EXPORTS" > mpv.def
          echo $exports >> mpv.def
          lib /def:mpv.def /name:mpv-2.dll /out:mpv.lib /MACHINE:X64

      - run: |
          $env:MPV_DIR="$(pwd)\mpv"
          ls -r $env:MPV_DIR
          cd flutter
          flutter build windows

      - uses: actions/upload-artifact@v3
        with:
          name: zenith-flutter-windows
          path: flutter/build/windows/runner/Release
